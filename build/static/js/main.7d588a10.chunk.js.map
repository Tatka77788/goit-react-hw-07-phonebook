{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/AppHeader/Title.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","animations/titleSlide.module.css","animations/noticeSlide.module.css","components/Notification/Notification.module.css","animations/filterScale.module.css","animations/itemSlide.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/Layout/Layout.js","components/Loader/Loader.js","components/AppHeader/Title.js","components/AppHeader/AppHeader.js","components/Notification/Notification.js","components/ContactForm/ContactFormView.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactFormContainer.js","components/Filter/FilterView.js","components/Filter/FilterContainer.js","components/ContactList/ListItemContainer.js","components/ContactList/ListItemView.js","components/ContactList/ContactListContainer.js","components/ContactList/ContactListView.js","components/AppView.js","components/AppContainer.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","contactsActions","_","payload","state","filter","id","loading","error","fetchExistContactsError","message","removeContactError","fetchExistContactsRequest","removeContactRequest","combineReducers","store","configureStore","reducer","contacts","contactReducer","Layout","children","className","styles","Containerv","Spiner","type","color","height","width","Title","text","CSSTransition","timeout","classNames","titleSlide","in","appear","titlel","Header","container","Notification","showNotice","noticeSlide","unmountOnExit","ContactForm","warning","name","number","handleSubmit","handleChange","form","onSubmit","input","placeholder","required","value","onChange","disabled","button","axios","defaults","baseURL","addContact","dispatch","post","then","data","catch","fetchContacts","get","addContactsError","deleteContact","delete","getContacts","getFilter","getLoading","getVisibleContacts","createSelector","toLowerCase","includes","getContactById","contactId","find","ContactFormContainer","target","setState","e","preventDefault","props","onAddContact","contact","setTimeout","this","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","Filter","onChangeFilter","filterScale","label","FilterContainer","toAppear","toUnAppear","length","prevProps","prevState","ownProps","onDeleteContact","listItem","paragraph","onClick","TransitionGroup","list","map","key","itemSlide","App","isloadingContact","AppHeader","AppContainer","onFetchContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7d588a10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1SX8e\",\"listItem\":\"ContactList_listItem__1-tcH\",\"paragraph\":\"ContactList_paragraph__nvzzQ\",\"button\":\"ContactList_button__3eOzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telInput\":\"ContactForm_telInput__1vw6v\",\"form\":\"ContactForm_form__1fhyu\",\"label\":\"ContactForm_label__35svt\",\"input\":\"ContactForm_input__2SRxd\",\"button\":\"ContactForm_button__mHe7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlel\":\"Title_titlel__2U-Y4\",\"container\":\"Title_container__1gz9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2bOM_\",\"label\":\"Filter_label__2LsOY\",\"input\":\"Filter_input__CxodO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Containerv\":\"Layout_Containerv__2Z7JE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleSlide_appear__11elD\",\"appearActive\":\"titleSlide_appearActive__3ytv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"noticeSlide_enter__KxglJ\",\"enterActive\":\"noticeSlide_enterActive__1r-sb\",\"exit\":\"noticeSlide_exit__2SXae\",\"exitActive\":\"noticeSlide_exitActive__3nXc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__1PvEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filterScale_enter__2uk7Y\",\"enterActive\":\"filterScale_enterActive__vy43p\",\"exit\":\"filterScale_exit__5r3PT\",\"exitActive\":\"filterScale_exitActive__3hi9u\",\"exitDone\":\"filterScale_exitDone__2O2ZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"itemSlide_enter__1Eg6g\",\"enterActive\":\"itemSlide_enterActive__3hQFG\",\"exit\":\"itemSlide_exit__1u7Sq\",\"exitActive\":\"itemSlide_exitActive__2coEI\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('contact/addRequest');\nconst addContactSuccess = createAction('contact/addSuccess');\nconst addContactError = createAction('contact/addError');\n\nconst fetchContactsRequest = createAction('contact/fetchRequest');\nconst fetchContactsSuccess = createAction('contact/fetchSuccess');\nconst fetchContactsError = createAction('contact/fetchError');\n\nconst deleteContactRequest = createAction('contact/deleteRequest');\nconst deleteContactSuccess = createAction('contact/deleteSuccess');\nconst deleteContactError = createAction('contact/deleteError');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contactsActions';\n\nconst addLocalContacts = (_, { payload }) => payload;\nconst addContact = (state, { payload }) => [...state, payload];\nconst deleteContact = (state, { payload }) =>\n  state.filter(({ id }) => id !== payload);\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: addLocalContacts,\n  [contactsActions.addContactSuccess]: addContact,\n  [contactsActions.deleteContactSuccess]: deleteContact,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchExistContactsError]: (_, { payload }) =>\n    payload.message,\n  [contactsActions.addContactError]: (_, { payload }) => payload.message,\n  [contactsActions.removeContactError]: (_, { payload }) => payload.message,\n  [contactsActions.fetchExistContactsRequest]: () => null,\n  [contactsActions.addContactRequest]: () => null,\n  [contactsActions.removeContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactReducer from './contacts/contactsReducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n});\n\nexport default store;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styles from './Layout.module.css';\n\nconst Layout = ({ children }) => (\n  <div className={styles.Containerv}>{children}</div>\n);\nexport default Layout;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spiner() {\n  return <Loader type=\"Puff\" color=\"#c71585\" height={60} width={60} />;\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport titleSlide from '../../animations/titleSlide.module.css';\nimport styles from './Title.module.css';\n\nfunction Title({ text }) {\n  return (\n    <>\n      <CSSTransition timeout={500} classNames={titleSlide} in appear>\n        <h2 className={styles.titlel}>{text}</h2>\n      </CSSTransition>\n    </>\n  );\n}\n\nexport default Title;\n","import React from 'react';\nimport Title from './Title';\nimport styles from './Title.module.css';\n\nfunction Header() {\n  return (\n    <div className={styles.container}>\n      <Title text=\"PHONEBOOK\" />\n    </div>\n  );\n}\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport noticeSlide from '../../animations/noticeSlide.module.css';\nimport styles from './Notification.module.css';\n\nexport default function Notification({ message, showNotice }) {\n  return (\n    <CSSTransition\n      timeout={250}\n      classNames={noticeSlide}\n      in={showNotice}\n      unmountOnExit\n    >\n      <div className={styles.Notification}>{message}</div>\n    </CSSTransition>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Notification from '../Notification/Notification';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm({\n  warning,\n  showNotice,\n  name,\n  number,\n  handleSubmit,\n  handleChange,\n}) {\n  return (\n    <>\n      <Notification message={warning} showNotice={showNotice} />\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"Enter name...\"\n          required\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n        />\n\n        <input\n          className={styles.input}\n          placeholder=\"Enter number\"\n          required\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n        />\n        <button\n          type=\"submit\"\n          disabled={!name || !number}\n          className={styles.button}\n        >\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import axios from 'axios';\nimport contactsActions from './contactsActions';\n\naxios.defaults.baseURL = 'http://localhost:2000';\n\nconst addContact = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest());\n\n  axios\n    .post('/contacts', { name, number })\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(contactsActions.addContactsError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\n    .catch(error =>\n      dispatch(contactsActions.deleteContactError(error.message)),\n    );\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getContacts = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nconst getContactById = createSelector(\n  [(_, contactId) => contactId, getContacts],\n  (contactId, contacts) => contacts.find(({ id }) => id === contactId),\n);\n\nexport default {\n  getLoading,\n  getContacts,\n  getFilter,\n  getVisibleContacts,\n  getContactById,\n};\n","/* eslint-disable consistent-return */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/require-default-props */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactForm from './ContactFormView';\nimport contactsOperations from '../../redux/contacts/contactsOperations';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nclass ContactFormContainer extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    showNotice: false,\n    warning: null,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts, onAddContact } = this.props;\n    const findContact = contacts.find(contact => name === contact.name);\n    if (findContact) {\n      this.setState({\n        warning: `${name} is already in contacts`,\n        showNotice: true,\n      });\n      return setTimeout(\n        () =>\n          this.setState({\n            showNotice: false,\n          }),\n        2000,\n      );\n    }\n    onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <ContactForm\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        handleChange={this.handleChange}\n        showNotice={this.state.showNotice}\n        warning={this.state.warning}\n        name={this.state.name}\n        number={this.state.number}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ContactFormContainer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport filterScale from '../../animations/filterScale.module.css';\nimport styles from './Filter.module.css';\n\nexport default function Filter({ value, onChangeFilter, appear }) {\n  return (\n    <CSSTransition\n      timeout={250}\n      classNames={filterScale}\n      in={appear}\n      unmountOnExit\n    >\n      <div className={styles.container}>\n        <label className={styles.label}>\n          Find contacts by name:\n          <input\n            className={styles.input}\n            type=\"text\"\n            value={value}\n            onChange={e => onChangeFilter(e.target.value)}\n          />\n        </label>\n      </div>\n    </CSSTransition>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable consistent-return */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filter from './FilterView';\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nclass FilterContainer extends Component {\n  state = {\n    appear: false,\n  };\n\n  componentDidMount() {\n    const { contacts } = this.props;\n    if (contacts.length <= 1) {\n      return;\n    }\n    this.setState({\n      appear: true,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.contacts.length !== this.props.contacts.length) {\n      const { contacts } = this.props;\n      if (contacts.length > 1) {\n        return this.toAppear();\n      }\n      if (contacts.length <= 1) {\n        return this.toUnAppear();\n      }\n    }\n  }\n\n  toAppear = () => {\n    this.setState({\n      appear: true,\n    });\n  };\n\n  toUnAppear = () => {\n    this.setState({\n      appear: false,\n    });\n  };\n\n  render() {\n    const { appear } = this.state;\n    return <Filter {...this.props} appear={appear} />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\n","import { connect } from 'react-redux';\nimport ListItem from './ListItemView';\nimport contactsOperations from '../../redux/contacts/contactsOperations';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = (state, ownProps) => {\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\n  return {\n    ...contact,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onDeleteContact: () =>\n      dispatch(contactsOperations.deleteContact(ownProps.id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styles from './ContactList.module.css';\n\nexport default function ListItem({ name, number, onDeleteContact }) {\n  return (\n    <li className={styles.listItem}>\n      <span className={styles.paragraph}>{name}</span>\n      <span className={styles.paragraph}>{number}</span>\n      <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\n        &#215;\n      </button>\n    </li>\n  );\n}\n","import { connect } from 'react-redux';\nimport ContactList from './ContactListView';\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = {\n  onDeleteContact: contactsActions.deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItemContainer';\nimport itemSlide from '../../animations/itemSlide.module.css';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList({ contacts }) {\n  return (\n    <TransitionGroup className={styles.list}>\n      {contacts.map(({ id }) => (\n        <CSSTransition key={id} timeout={250} classNames={itemSlide}>\n          <ListItem id={id} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    PropTypes.array,\n  ]),\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Layout from './Layout/Layout';\nimport Spinner from './Loader/Loader';\nimport AppHeader from './AppHeader/AppHeader';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport Filter from './Filter/FilterContainer';\nimport ContactList from './ContactList/ContactListContainer';\n\nexport default function App({ contacts, isloadingContact }) {\n  return (\n    <Layout>\n      {isloadingContact && <Spinner />}\n      <AppHeader />\n      <ContactForm />\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n    </Layout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport App from './AppView';\nimport contactsOperations from '../redux/contacts/contactsOperations';\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\n\nclass AppContainer extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return <App {...this.props} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n    isloadingContact: contactsSelectors.getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport App from './components/AppContainer';\n\nimport './base.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}